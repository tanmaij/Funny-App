{"ast":null,"code":"var _jsxFileName = \"D:\\\\LearnReact\\\\amongustask\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Vending from \"./Component/Vending\";\nimport WaterVending from \"./Component/WaterVendingMachine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  var WaterType = [\"sting\", \"coca\", \"fanta\", \"sprite\"];\n  const Water = WaterType[getRandomInt(WaterType.length)];\n  var BoxWater = [];\n\n  var GetItem = (IndexBox, IndexWater) => {\n    BoxWater.push({\n      id: IdBox[IndexBox],\n      Type: WaterType[IndexWater]\n    });\n    IdBox.splice(IndexBox, 1);\n    WaterType.splice(IndexWater, 1);\n  };\n\n  const init = () => {\n    IdBox = [\"A1\", \"A2\", \"A3\", \"B1\", \"B2\", \"B3\"];\n    WaterType = [\"sting\", \"coca\", \"fanta\", \"sprite\"];\n    BoxWater = [];\n\n    while (WaterType.length > 0) {\n      GetItem(getRandomInt(IdBox.length), getRandomInt(WaterType.length));\n    }\n\n    IdBox.forEach(idd => {\n      BoxWater.push({\n        id: idd,\n        Type: \"white\"\n      });\n    });\n    const IdBoxT = [\"A1\", \"A2\", \"A3\", \"B1\", \"B2\", \"B3\"];\n\n    for (var i = 0; i < IdBoxT.length; i++) {\n      for (var j = 0; j < BoxWater.length; j++) {\n        if (BoxWater[j].id == IdBoxT[i]) {\n          var temp = BoxWater[j];\n          BoxWater[j] = BoxWater[i];\n          BoxWater[i] = temp;\n          break;\n        }\n      }\n    }\n\n    return BoxWater;\n  };\n\n  const [BW, setBW] = useState(init());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WV\",\n    style: {\n      gridTemplateColumns: \"60% auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(WaterVending, {\n      BoxWater: BW\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Vending, {\n      CheckKeyLog: setBW,\n      Water: Water\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vzDFqFT4RHlvQ2xVZqYQ/+GVTds=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/LearnReact/amongustask/src/App.js"],"names":["useEffect","useState","Vending","WaterVending","App","getRandomInt","max","Math","floor","random","WaterType","Water","length","BoxWater","GetItem","IndexBox","IndexWater","push","id","IdBox","Type","splice","init","forEach","idd","IdBoxT","i","j","temp","BW","setBW","gridTemplateColumns"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Vending from \"./Component/Vending\";\n\nimport WaterVending from \"./Component/WaterVendingMachine\";\nfunction App() {\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  var WaterType = [\"sting\", \"coca\", \"fanta\", \"sprite\"];\n  const Water = WaterType[getRandomInt(WaterType.length)];\n  var BoxWater = [];\n  var GetItem = (IndexBox, IndexWater) => {\n    BoxWater.push({ id: IdBox[IndexBox], Type: WaterType[IndexWater] });\n    IdBox.splice(IndexBox, 1);\n    WaterType.splice(IndexWater, 1);\n  };\n  const init = () => {\n    IdBox = [\"A1\", \"A2\", \"A3\", \"B1\", \"B2\", \"B3\"];\n    WaterType = [\"sting\", \"coca\", \"fanta\", \"sprite\"];\n\n    BoxWater = [];\n    while (WaterType.length > 0) {\n      GetItem(getRandomInt(IdBox.length), getRandomInt(WaterType.length));\n    }\n    IdBox.forEach((idd) => {\n      BoxWater.push({ id: idd, Type: \"white\" });\n    });\n    const IdBoxT = [\"A1\", \"A2\", \"A3\", \"B1\", \"B2\", \"B3\"];\n    for (var i = 0; i < IdBoxT.length; i++) {\n      for (var j = 0; j < BoxWater.length; j++) {\n        if (BoxWater[j].id == IdBoxT[i]) {\n          var temp = BoxWater[j];\n          BoxWater[j] = BoxWater[i];\n          BoxWater[i] = temp;\n          break;\n        }\n      }\n    }\n    return BoxWater;\n  };\n  const [BW, setBW] = useState(init());\n  return (\n    <div className=\"WV\" style={{ gridTemplateColumns: \"60% auto\" }}>\n      <WaterVending BoxWater={BW} />\n      <Vending CheckKeyLog={setBW} Water={Water} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}